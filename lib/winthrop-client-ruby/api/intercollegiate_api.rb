=begin
#Winthrop Intelligence Internal API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.22.0

Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'cgi'

module WinthropClient
  class IntercollegiateApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve some or all active jobs
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page results page to retrieve. (default to 1)
    # @option opts [Integer] :per_page number of results per page. (default to 100)
    # @option opts [Object] :q Ransack query
    # @return [JobCollection]
    def get_job_posts(opts = {})
      data, _status_code, _headers = get_job_posts_with_http_info(opts)
      data
    end

    # Retrieve some or all active jobs
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page results page to retrieve. (default to 1)
    # @option opts [Integer] :per_page number of results per page. (default to 100)
    # @option opts [Object] :q Ransack query
    # @return [Array<(JobCollection, Integer, Hash)>] JobCollection data, response status code and response headers
    def get_job_posts_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: IntercollegiateApi.get_job_posts ...'
      end
      # resource path
      local_var_path = '/wi_jobs/job_posts'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'per_page'] = opts[:'per_page'] if !opts[:'per_page'].nil?
      query_params[:'q'] = opts[:'q'] if !opts[:'q'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'JobCollection'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['ApiKey', 'Oauth2']

      new_options = opts.merge(
        :operation => :"IntercollegiateApi.get_job_posts",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: IntercollegiateApi#get_job_posts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
